# This is a basic workflow to help you get started with Actions

name: Build Game

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  buildLinux:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@main

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.7

      # Runs a set of commands using the runners shell
      - name: Install libvlc
        run: sudo apt-get install -y libvlc-dev libvlccore-dev

      - name: Install lime dependencies
        run: sudo apt-get install libgl1-mesa-dev libglu1-mesa-dev g++ g++-multilib gcc-multilib libasound2-dev libx11-dev libxext-dev libxi-dev libxrandr-dev libxinerama-dev

      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          chmod +x ./build/install_libraries.sh
          ./build/install_libraries.sh
          haxelib git hxcpp https://github.com/HaxeFoundation/hxcpp
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile Linux
        run: |
          cd $(haxelib libpath hxcpp)/tools/hxcpp
          haxe compile.hxml
          cd -
          haxelib --always run lime rebuild linux
          haxelib --always run lime setup
          haxelib --always run lime build Project.xml linux --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Linux Artifact
        uses: actions/upload-artifact@main
        with:
          name: linuxBuild
          path: "export/release/linux/bin"

  buildWindows:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@main

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.7
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup C:/haxelib
          ./build/install_libraries.bat
        shell: cmd
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: |
          haxelib --always run lime build windows --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: windowsBuild
          path: export/release/windows/bin

  buildMac:
    runs-on: macos-13

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@main

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.7
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          chmod +x ./build/install_libraries.sh
          ./build/install_libraries.sh
          haxelib git hxcpp https://github.com/HaxeFoundation/hxcpp
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: |
          cd $(haxelib libpath hxcpp)/tools/hxcpp
          haxe compile.hxml
          cd -
          haxelib --always run lime rebuild mac
          haxelib --always run lime setup
          haxelib --always run lime build mac --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: macBuild
          path: export/release/macos/bin
