# This is a basic workflow to help you get started with Actions

name: github-pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    concurrency: ci-${{ github.ref }} # Recommended if you intend to make multiple deployments in quick succession.

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@main
      
      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.7

      - name: Update Packages
        run: sudo apt-get update --fix-missing

      - name: Install rsync üìö
        run: |
          sudo apt-get update && sudo apt-get install -y rsync
      
      - name: Install lime dependencies üìö
        run: sudo apt-get install libgl1-mesa-dev libglu1-mesa-dev g++ g++-multilib gcc-multilib libasound2-dev libx11-dev libxext-dev libxi-dev libxrandr-dev libxinerama-dev

      - name: Install libvlc üìπ
        run: sudo apt-get install -y libvlc-dev libvlccore-dev
      
      # Runs a set of commands using the runners shell
      - name: Install Haxe Libraries üìö
        run: |
            haxelib setup ~/haxelib
            chmod +x ./build/install_libraries.sh
            ./build/install_libraries.sh
            haxelib --always set hxcpp 4.3.2
            haxelib install hxp
            haxelib install dox
            haxelib install format
            haxelib install tjson
            haxelib list
            mkdir pages
      
      - name: Create Documentation Site üåê
        run: |
            chmod +x docs/docs.sh
            docs/docs.sh
      
      - name: github-actions deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: pages # The folder the action should deploy.
